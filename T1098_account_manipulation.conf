{
  "platform": "linux",
  "queries": {
    "ssh_authorized_key_added": {
      "query": "SELECT u.username, u.uid, u.gid, ak.algorithm, ak.key, ak.key_file, ak.options FROM users u CROSS JOIN authorized_keys ak USING (uid);",
      "interval": 10,
      "description": "Detects newly created authorized keys.",
      "removed": false
    },
    "ssh_config_modification": {
      "query": "SELECT u.username, u.uid, u.gid, sc.block, sc.option, sc.ssh_config_file FROM users u CROSS JOIN ssh_configs sc USING (uid);",
      "interval": 10,
      "description": "Detects changes to SSH configurations.",
      "removed": false
    },
    "private_ssh_key_added": {
      "query": "SELECT u.username, u.uid, u.gid, s.key_type, s.path, s.encrypted FROM users u CROSS JOIN user_ssh_keys s USING (uid);",
      "interval": 10,
      "description": "Detects newly created private keys in user's ~/.ssh directory.",
      "removed": false
    },
    "ssh_key_generation": {
      "query": "SELECT pe.pid, u.username, pe.uid, pe.gid, pe.cmdline, pe.path, strftime('%Y-%m-%d %H:%M:%S', pe.time, 'unixepoch', '+8 hours') AS process_time FROM process_events pe CROSS JOIN users u ON pe.uid = u.uid WHERE pe.path LIKE '%ssh-keygen%';",
      "interval": 10,
      "description": "Detects the creation of SSH keys using the ssh-keygen utility.",
      "removed": false
    }
  }
}
